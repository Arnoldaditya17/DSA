#include <iostream>
using namespace std;
class node
{
public:
    int data;
    node *next, *pre;
};
node *newnode, *head, *temp;

void insertfront()
{
    newnode = new node();
    cout << "Enter data:";
    cin >> newnode->data;
    newnode->pre = NULL;
    newnode->next = head;

    head->pre = newnode;
    head = newnode;
}

void insertback()
{

    newnode = new node();
    cout << "Enter data:";
    cin >> newnode->data;
    newnode->next = NULL;

    temp = head;
    while (temp->next!= NULL)
    {
        temp = temp->next;
    }
    newnode->pre = temp;
   
    temp->next = newnode;
}

void insertposition()
{
}

void deletefront()
{
}

void display()
{
    temp = head;
    
    while (temp != NULL)
    {
        cout << temp->data << "->";
        temp = temp->next;
    }
}

int main()
{
    int cho;
    char choice;

    while (cho)
    {
        newnode = new node();
        cout << "Enter data:";
        cin >> newnode->data;

        if (head == 0)
        {
            head = temp = newnode;
        }
        else
        {
            newnode->next = NULL;
            newnode->pre = temp;
            temp->next = newnode;
            temp = newnode;
        }
        cout << "more or exit (1,0)";
        cin >> cho;
    }

    do
    {
        int task;
        cout << "\n\n\n\n\n";
        cout << "*********CHOOSE THE TASK:*********\n";
        cout << "1.Insert front\n";
        cout << "2.Insert back\n";
        cout << "3.Insert position\n";
        cout << "4.Deletefront\n";
        cout << "5.Delete position\n";
        cout << "6.Delete End\n";
        cout << "7.Display\n";
        cout << "Enter the task:";
        cin >> task;
        switch (task)
        {
        case 1:
        {
            insertfront();
            break;
        }

        case 2:
        {
            insertback();
            break;
        }

        case 3:
        {
            insertposition();
            break;
        }

        case 4:
        {
            deletefront();
            break;
        }
        case 7:
        {
            display();
            break;
        }
        default:
        {
            cout << "No such task present";
        }
        }

        cout << "\nDo you want to continue y/n:";
        

        cin >> choice;
        fflush(stdin);
    } while (choice == 'y');
    cout << "thank you!";
}

// cout << "\nreverse printing:\n";
// node*traverse= temp;
// while(traverse!=NULL)
// {
//     cout << traverse->data << "->";
//     traverse = traverse->pre;
// }
